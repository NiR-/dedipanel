<?php

/**
 * VmTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class VmTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object VmTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Vm');
    }
    
    public function getVMs() {
        $q = Doctrine_Query::create()->select('ip, port, user')->from('Vm');
        $res = $q->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
        $q->free();
        
        return $res;
    }
    
    // Vérifie si une vm est déjà prise en charge selon son ip, port et user
    public function exists($ip, $port, $user) {
        $q = Doctrine_Query::create()->select('id')->from('Vm')
            ->where('ip = ?', $ip)->andWhere('port = ?', $port)->andWhere('user = ?', $user);
        $res = $q->fetchOne(array(), Doctrine_Core::HYDRATE_ARRAY);
        $q->free();
        
        return $res['id'];
    }
    
    public function getHydrateVM($vmId) {
        $q = Doctrine_Query::create()->select('ip, port, user, keyfile')->from('Vm')
            ->where('id = ?', $vmId);
        $res = $q->fetchOne(array(), Doctrine_Core::HYDRATE_ARRAY);
        $q->free();
        
        return $res;
    }
    
    public function addVM($ip, $port, $user, $mdp) {
        // On vérifie que les identifiants ssh fournies soient corrects
        $ssh = SSH::isValidIdents($ip, $port, $user, $mdp);

        if ($ssh != false) {
            // On génère un identifiant unique de 23 caractères
            $priv_keyfile = uniqid('', true);

            // On génère la paire de clé et on upload la clé publique
            $ssh->createKeyPair($priv_keyfile);

            // On enregistre les données dans la bdd
            $vm = new Vm();
            $vm->ip = $ip;
            $vm->port = $port;
            $vm->user = $user;
            $vm->keyfile = $priv_keyfile;
            $vm->save();

            return true;
        }
        else return false;
    }
    
    public function editVM($vmId, $ip, $port, $user, $mdp, $keyfile) {
        $ssh = SSH::isValidIdents($ip, $port, $user, $mdp);
        $ssh = true;
        
        if ($ssh != false) {
            // On génère un identifiant unique de 23 caractères
            $priv_keyfile = uniqid('', true);

            // On supprime l'ancienne paire de clés et on en régénère une nouvelle
            $ssh->deleteKeyPair($keyfile);
            $ssh->createKeyPair($priv_keyfile);

            // On enregistre les données dans la bdd
            $q = Doctrine_Query::create()->update('Vm')
                ->set('port', '?', $port)
                ->set('user', '?', $user)
                ->set('keyfile = ?', $priv_keyfile)
                ->where('id = ?', $vmId)->execute();
            
            return true;
        }
        else return false;
    }
}