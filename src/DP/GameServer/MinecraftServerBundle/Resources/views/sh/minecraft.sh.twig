#!/bin/bash

# This file is part of Dedipanel project
#
# (c) 2010-2015 Dedipanel <http://www.dedicated-panel.net>
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.

SCREEN_NAME="{{ screenName }}"
STATUS=`ps aux | grep SCREEN | grep "$SCREEN_NAME" | grep -v grep | wc -l`

INVOCATION="java -Xms{{ minHeap }}M -Xmx{{ maxHeap }}M -XX:+UseConcMarkSweepGC \
-XX:+CMSIncrementalPacing -XX:ParallelGCThreads={{ parallelThreads }} -XX:+AggressiveOpts \
-jar {{ bin }} {{ options }}"

case "$1" in
    start)
        if [ $STATUS -eq 0 ]; then
            echo "starting "
            cd {{ binDir }}
            {% if core is not empty %}
            {# /!\ Le numéro du core est stocké à partir de 1 en base; linux attend un bitmask représentant le core, commencant à 0 #}
            screen -dmS $SCREEN_NAME taskset -c {{ core }} $INVOCATION
            {% else %}
            screen -dmS $SCREEN_NAME $INVOCATION
            {% endif %}
            echo "."
        else
            $0 restart
        fi
        
        exit ${?}
    ;;

    stop)
        if [ $STATUS -ne 0 ]; then
            echo "stopping"
            screen -p 0 -S $SCREEN_NAME -X eval 'stuff "save-all"\015'
            screen -p 0 -S $SCREEN_NAME -X eval 'stuff "stop"\015'
            echo "."
        fi

        exit ${?}
    ;;

    restart)
        $0 stop
        sleep 5
        $0 start

        exit ${?}
    ;;

    status)        
        if [ $STATUS -eq 0 ]; then
            echo "Not running."
        else
            echo "Started."
        fi
    ;;
    
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit ${?}
    ;;
esac