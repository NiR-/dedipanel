<?php

/*
** Copyright (C) 2010-2013 Kerouanton Albin, Smedts JÃ©rÃ´me
**
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
**
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
** GNU General Public License for more details.
**
** You should have received a copy of the GNU General Public License along
** with this program; if not, write to the Free Software Foundation, Inc.,
** 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

namespace DP\Core\GameBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * GameRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GameRepository extends EntityRepository
{
    public function getAvailableGames()
    {
        $qb = $this->createQueryBuilder('game');
        $qb->select('game.id, game.name')->where('game.available = true');
        
        return $qb->getQuery()->getResult();
    }
    
    public function getAvailableSteamGames()
    {
        return $this->getQBAvailableSteamGames()->getQuery()->getResult();
    }
    
    public function getQBAvailableSteamGames()
    {
        $qb = $this->createQueryBuilder('game');
        
        $qb
            ->where('game.type = ?1')
            ->andWhere('game.available = true')
            ->setParameters(array(1 => 'steam'));
        ;
        
        return $qb;
    }
    
    public function getAvailableMinecraftGames()
    {
        return $this->getQBAvailableMinecraftGames()->getQuery()->getResult();
    }
    
    public function getQBAvailableMinecraftGames()
    {
        $qb = $this->createQueryBuilder('game');
        
        $qb
            ->where('game.type = ?1')
            ->andWhere('game.available = true')
            ->setParameters(array(1 => 'minecraft'));
        ;
        
        return $qb;
    }
}